---
import type { TimelineEvent } from '../../types';

interface Props {
  class?: string;
  events: TimelineEvent[];
}

const { class: className, events, ...props } = Astro.props;
---

<div class={className} {...props}>
  <ul class="ps-0 sm:ps-2 flex flex-col">
    {
      events.map((event, index) => (
        <li class="group relative flex list-none gap-x-3 rounded-full ps-0 sm:gap-x-2 [&>.content-timeline]:last:border-b-0 m-0">
          {/* circle */}
          <span class="z-10 my-2 ms-2 h-3 w-3 min-w-3 rounded-full border-2 border-muted-foreground bg-white transition-transform group-hover:scale-125" />
          {/* line */}
          {index !== events.length - 1 && (
            <span
              class="absolute start-[12px] top-[20px] w-1 bg-border"
              style={{ height: 'calc(100% - 4px)' }}
            />
          )}
          <div class="content-timeline flex gap-2 max-sm:flex-col pb-5 mb-5 border-b">
            <samp class="w-fit grow-0 rounded-md py-1 text-sm max-sm:bg-primary-foreground max-sm:px-2 sm:min-w-[82px] sm:text-right">
              {event.date}
            </samp>
            <div class="pl-4">
              <Fragment set:html={event.content} />
            </div>
          </div>
        </li>
      ))
    }
  </ul>
</div>
