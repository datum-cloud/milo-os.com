---
import config from 'virtual:starlight/user-config';

import SearchButton from './SearchButton.astro';
import SearchModal from './SearchModal.astro';
// import CustomSidebar from './CustomSidebar.astro';

import FooterDocs from '@components/FooterDocs.astro';

const { hasSidebar } = Astro.locals.starlightRoute;

/**
 * Render the `Search` component if Pagefind is enabled or the default search component has been overridden.
 */
const shouldRenderSearch =
  config.pagefind || config.components.Search !== '@astrojs/starlight/components/Search.astro';
---

<div class="page">
  <header class="sl-header">
    <slot name="header" />
  </header>
  <div class="datum-container flex items-center justify-center">
    <div class="w-full px-6 md:px-16">
      <div class="main-frame">
        {
          hasSidebar && (
            <nav class="sidebar" aria-label={Astro.locals.t('sidebarNav.accessibleLabel')}>
              <div id="starlight__sidebar" class="sidebar-pane" data-lenis-prevent>
                <div class="sidebar-content sl-flex">
                  <div class="hidden md:flex print:hidden">
                    {shouldRenderSearch && <SearchButton class={Astro.props.class} />}
                  </div>
                  <slot name="sidebar" />
                </div>
              </div>
            </nav>
          )
        }

        <slot />
      </div>
    </div>
  </div>

  <FooterDocs />
  <SearchModal class={Astro.props.class} />
</div>

<style>
  .search-container {
    display: contents;
  }
</style>

<script type="text/javascript" defer is:inline>
  /* eslint @typescript-eslint/no-unused-expressions: "off" */
  !(function (e, t, n) {
    function a() {
      var e = t.getElementsByTagName('script')[0],
        n = t.createElement('script');
      ((n.type = 'text/javascript'),
        (n.async = !0),
        (n.src = 'https://beacon-v2.helpscout.net'),
        e.parentNode.insertBefore(n, e));
    }
    if (
      ((e.Beacon = n =
        function (t, n, a) {
          e.Beacon.readyQueue.push({ method: t, options: n, data: a });
        }),
      (n.readyQueue = []),
      'complete' === t.readyState)
    )
      return a();
    e.attachEvent ? e.attachEvent('onload', a) : e.addEventListener('load', a, !1);
  })(window, document, window.Beacon || function () {});
</script>
{
  import.meta.env.MODE === 'production' && (
    <script type="text/javascript" defer is:inline>
      window.Beacon('init', '57a7245e-772c-4d51-bdb1-6b898f34f2cb');
    </script>
  )
}

<script>
  import '/src/v1/scripts/lenis-parallax.js';
  import '/src/v1/scripts/glossary-tooltip.js';
</script>
