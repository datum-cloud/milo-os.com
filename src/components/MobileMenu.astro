---
import type { NavData } from '@/src/types/navigation';
import GithubStargazerValue from '@components/GithubStargazerValue.astro';
import Button from '@components/Button.astro';

interface Props {
  navigation: NavData['main'];
}

const { navigation }: Props = Astro.props;
---

<div
  class="mobile-menu-container"
  x-data="{
    isOpen: false,
    toggleMenu() {
      this.isOpen = !this.isOpen;
      if (this.isOpen) {
        document.body.style.overflow = 'hidden';
        document.body.classList.add('mobile-menu-open');
      } else {
        document.body.style.overflow = '';
        document.body.classList.remove('mobile-menu-open');
      }
    },
    closeMenu() {
      this.isOpen = false;
      document.body.style.overflow = '';
      document.body.classList.remove('mobile-menu-open');
    }
  }"
  x-init="
    // Close menu on escape key
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && isOpen) {
        closeMenu();
      }
    });

    // Close menu on window resize
    window.addEventListener('resize', () => {
      if (window.innerWidth >= 1024 && isOpen) {
        closeMenu();
      }
    });
  "
>
  <!-- Mobile Menu Button -->
  <button
    @click="toggleMenu()"
    class="mobile-menu-button"
    aria-label="Toggle mobile menu"
    :aria-expanded="isOpen"
  >
    <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path
        x-show="!isOpen"
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="M4 6h16M4 12h16M4 18h16"
      >
      </path>
      <path
        x-cloak
        x-show="isOpen"
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="M6 18L18 6M6 6l12 12"
      >
      </path>
    </svg>
  </button>

  <!-- Overlay -->
  <div
    x-show="isOpen"
    x-cloak
    x-transition:enter="transition-opacity ease-linear duration-300"
    x-transition:enter-start="opacity-0"
    x-transition:enter-end="opacity-100"
    x-transition:leave="transition-opacity ease-linear duration-300"
    x-transition:leave-start="opacity-100"
    x-transition:leave-end="opacity-0"
    @click="closeMenu()"
    class="mobile-menu-overlay"
  >
  </div>

  <!-- Mobile Menu -->
  <div
    x-show="isOpen"
    x-cloak
    x-transition:enter="transition ease-in-out duration-300 transform"
    x-transition:enter-start="-translate-x-full"
    x-transition:enter-end="translate-x-0"
    x-transition:leave="transition ease-in-out duration-300 transform"
    x-transition:leave-start="translate-x-0"
    x-transition:leave-end="-translate-x-full"
    class="mobile-menu"
  >
    <div class="mobile-menu-content">
      <ul class="mobile-menu-list">
        {
          navigation.map((item) => (
            <li class="mobile-menu-item">
              <a
                href={item.href}
                class="mobile-menu-link"
                @click="closeMenu()"
                data-astro-prefetch="load"
              >
                <span>{item.text}</span>
              </a>

              {item.children && (
                <div class="mobile-dropdown-content">
                  {item.children.map((section) => (
                    <div class="mobile-dropdown-section">
                      {'title' in section && section.title && (
                        <h3 class="mobile-dropdown-title">{section.title}</h3>
                      )}
                      <ul class="mobile-dropdown-items">
                        {section.items?.map((subItem) => (
                          <li class="mobile-dropdown-item">
                            <a
                              href={subItem.href}
                              class="mobile-dropdown-link"
                              @click="closeMenu()"
                            >
                              <span>{subItem.text}</span>
                            </a>
                          </li>
                        ))}
                      </ul>
                    </div>
                  ))}
                </div>
              )}
            </li>
          ))
        }
      </ul>
    </div>
  </div>
</div>
